name: Build and Release Binaries

on:
  push:
    tags:
      - '*'

  
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.19'

      - name: Make build.sh executable
        run: chmod +x ./build.sh

      - name: Build binaries (Linux and Windows)
        run: ./build.sh

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: main
          path: ./main

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: main.exe
          path: ./main.exe
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/firmaperu-invoker:${{ github.ref_name }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/firmaperu-invoker:${{ github.ref_name }}

  release:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write # Permiso para crear releases y subir archivos
    steps:
      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: main
          path: ./

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: main.exe
          path: ./

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main
          asset_name: main
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.exe
          asset_name: main.exe
          asset_content_type: application/octet-stream
